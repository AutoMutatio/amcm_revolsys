/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.revolsys.gis.esri.gdb.file.swig;

public class MultiPartShapeBuffer extends ShapeBuffer {
  private long swigCPtr;

  protected MultiPartShapeBuffer(long cPtr, boolean cMemoryOwn) {
    super(EsriFileGdbJNI.SWIGMultiPartShapeBufferUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MultiPartShapeBuffer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        EsriFileGdbJNI.delete_MultiPartShapeBuffer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public int GetExtent(DoubleArrayValue extent) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetExtent(swigCPtr, this, extent);
  }

  public int GetNumParts(IntValue numParts) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetNumParts(swigCPtr, this, numParts);
  }

  public int GetNumPoints(IntValue numPoints) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetNumPoints(swigCPtr, this, numPoints);
  }

  public int GetParts(IntArrayValue parts) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetParts(swigCPtr, this, parts);
  }

  public int GetPoints(Point points) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetPoints(swigCPtr, this, Point.getCPtr(points), points);
  }

  public int GetZExtent(DoubleArrayValue zExtent) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetZExtent(swigCPtr, this, zExtent);
  }

  public int GetZs(DoubleArrayValue zArray) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetZs(swigCPtr, this, zArray);
  }

  public int GetMExtent(DoubleArrayValue mExtent) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetMExtent(swigCPtr, this, mExtent);
  }

  public int GetMs(DoubleArrayValue mArray) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetMs(swigCPtr, this, mArray);
  }

  public int GetNumCurves(IntValue numCurves) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetNumCurves(swigCPtr, this, numCurves);
  }

  public int GetCurves(UnsignedCharArrayValue curves) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetCurves(swigCPtr, this, curves);
  }

  public int GetIDs(IntArrayValue ids) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_GetIDs(swigCPtr, this, ids);
  }

  public int Setup(ShapeType shapeType, int numParts, int numPoints, int numCurves) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_Setup__SWIG_0(swigCPtr, this, shapeType.swigValue(), numParts, numPoints, numCurves);
  }

  public int Setup(ShapeType shapeType, int numParts, int numPoints) {
    return EsriFileGdbJNI.MultiPartShapeBuffer_Setup__SWIG_1(swigCPtr, this, shapeType.swigValue(), numParts, numPoints);
  }

  public int CalculateExtent() {
    return EsriFileGdbJNI.MultiPartShapeBuffer_CalculateExtent(swigCPtr, this);
  }

  public int PackCurves() {
    return EsriFileGdbJNI.MultiPartShapeBuffer_PackCurves(swigCPtr, this);
  }

  public MultiPartShapeBuffer() {
    this(EsriFileGdbJNI.new_MultiPartShapeBuffer(), true);
  }

}
