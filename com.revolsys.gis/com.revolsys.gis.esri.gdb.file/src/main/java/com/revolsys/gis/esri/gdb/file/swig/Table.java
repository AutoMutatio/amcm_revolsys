/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.revolsys.gis.esri.gdb.file.swig;

public class Table {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Table(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Table obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        EsriFileGdbJNI.delete_Table(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int GetDefinition(SWIGTYPE_p_std__string tableDef) {
    return EsriFileGdbJNI.Table_GetDefinition(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(tableDef));
  }

  public int GetDocumentation(SWIGTYPE_p_std__string documentation) {
    return EsriFileGdbJNI.Table_GetDocumentation(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(documentation));
  }

  public int SetDocumentation(String documentation) {
    return EsriFileGdbJNI.Table_SetDocumentation(swigCPtr, this, documentation);
  }

  public int GetFieldInformation(FieldInfo fieldInfo) {
    return EsriFileGdbJNI.Table_GetFieldInformation(swigCPtr, this, FieldInfo.getCPtr(fieldInfo), fieldInfo);
  }

  public int AddField(String fieldDef) {
    return EsriFileGdbJNI.Table_AddField(swigCPtr, this, fieldDef);
  }

  public int AlterField(String fieldDef) {
    return EsriFileGdbJNI.Table_AlterField(swigCPtr, this, fieldDef);
  }

  public int DeleteField(String fieldName) {
    return EsriFileGdbJNI.Table_DeleteField(swigCPtr, this, fieldName);
  }

  public int GetIndexes(SWIGTYPE_p_std__vectorT_std__string_t indexDefs) {
    return EsriFileGdbJNI.Table_GetIndexes(swigCPtr, this, SWIGTYPE_p_std__vectorT_std__string_t.getCPtr(indexDefs));
  }

  public int AddIndex(String indexDef) {
    return EsriFileGdbJNI.Table_AddIndex(swigCPtr, this, indexDef);
  }

  public int DeleteIndex(String indexName) {
    return EsriFileGdbJNI.Table_DeleteIndex(swigCPtr, this, indexName);
  }

  public int CreateSubtype(String subtypeDef) {
    return EsriFileGdbJNI.Table_CreateSubtype(swigCPtr, this, subtypeDef);
  }

  public int AlterSubtype(String subtypeDef) {
    return EsriFileGdbJNI.Table_AlterSubtype(swigCPtr, this, subtypeDef);
  }

  public int DeleteSubtype(String subtypeName) {
    return EsriFileGdbJNI.Table_DeleteSubtype(swigCPtr, this, subtypeName);
  }

  public int EnableSubtypes(String subtypeFieldName, String subtypeDef) {
    return EsriFileGdbJNI.Table_EnableSubtypes(swigCPtr, this, subtypeFieldName, subtypeDef);
  }

  public int GetDefaultSubtypeCode(int[] defaultCode) {
    return EsriFileGdbJNI.Table_GetDefaultSubtypeCode(swigCPtr, this, defaultCode);
  }

  public int SetDefaultSubtypeCode(int defaultCode) {
    return EsriFileGdbJNI.Table_SetDefaultSubtypeCode(swigCPtr, this, defaultCode);
  }

  public int DisableSubtypes() {
    return EsriFileGdbJNI.Table_DisableSubtypes(swigCPtr, this);
  }

  public int Search(String subfields, String whereClause, Envelope envelope, boolean recycling, EnumRows rows) {
    return EsriFileGdbJNI.Table_Search__SWIG_0(swigCPtr, this, subfields, whereClause, Envelope.getCPtr(envelope), envelope, recycling, EnumRows.getCPtr(rows), rows);
  }

  public int Search(String subfields, String whereClause, boolean recycling, EnumRows rows) {
    return EsriFileGdbJNI.Table_Search__SWIG_1(swigCPtr, this, subfields, whereClause, recycling, EnumRows.getCPtr(rows), rows);
  }

  public int CreateRowObject(Row row) {
    return EsriFileGdbJNI.Table_CreateRowObject(swigCPtr, this, Row.getCPtr(row), row);
  }

  public int Insert(Row row) {
    return EsriFileGdbJNI.Table_Insert(swigCPtr, this, Row.getCPtr(row), row);
  }

  public int Update(Row row) {
    return EsriFileGdbJNI.Table_Update(swigCPtr, this, Row.getCPtr(row), row);
  }

  public int Delete(Row row) {
    return EsriFileGdbJNI.Table_Delete(swigCPtr, this, Row.getCPtr(row), row);
  }

  public int IsEditable(boolean[] isEditable) {
    return EsriFileGdbJNI.Table_IsEditable(swigCPtr, this, isEditable);
  }

  public int GetRowCount(int[] rowCount) {
    return EsriFileGdbJNI.Table_GetRowCount(swigCPtr, this, rowCount);
  }

  public int GetExtent(Envelope extent) {
    return EsriFileGdbJNI.Table_GetExtent(swigCPtr, this, Envelope.getCPtr(extent), extent);
  }

  public int SetWriteLock() {
    return EsriFileGdbJNI.Table_SetWriteLock(swigCPtr, this);
  }

  public int FreeWriteLock() {
    return EsriFileGdbJNI.Table_FreeWriteLock(swigCPtr, this);
  }

  public int LoadOnlyMode(boolean loadOnlyMode) {
    return EsriFileGdbJNI.Table_LoadOnlyMode(swigCPtr, this, loadOnlyMode);
  }

  public Table() {
    this(EsriFileGdbJNI.new_Table(), true);
  }

}
